@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$neo-line-default: (
  50: #ffffff,
  100: #f8fbf9,
  200: #ecfbf1,
  300: #8dd9d2,
  400: #71dbc4,
  500: #06ccab,
  600: #00a379,
  700: #009269,
  800: #00815b,
  900: #00633d,
  A100: #ffffff,
  A200: #dcaff5,
  A400: #71dbc4,
  A700: #00815b,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, 0.87),
    A200: rgba(black, 0.87),
    A400: rgba(black, 0.87),
    A700: white,
  ),
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$default-app-primary: mat.define-palette($neo-line-default);
$default-app-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$default-app-warn: mat.define-palette(mat.$red-palette);

// Create the theme object (a Sass map containing all of the palettes).
$default-app-theme: mat.define-light-theme(
  $default-app-primary,
  $default-app-accent,
  $default-app-warn
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($default-app-theme);
